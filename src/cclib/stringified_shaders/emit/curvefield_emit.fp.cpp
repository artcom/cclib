/* Generated file, do not edit! */

#include "curvefield_emit.fp.h"

char const* const curvefield_emit_fp = 
   "float radius;\n"
   "float offset;\n"
   "float scale;\n"
   "float outputScale;\n"
   "float3 curveAtPoint(float x){\n"
   "	float y = outputScale * (snoise(float2(x * scale + offset,0)));\n"
   "	float z = outputScale * (snoise(float2(x * scale + offset + 100, 0)));\n"
   "	return float3(x, y, z);\n"
   "}\n"
   "	\n"
   "float3 curvePos(float3 thePosition){\n"
   "	float3 result = float3(0,0,0);\n"
   "		\n"
   "	float3 myCurvePoint1 = curveAtPoint(thePosition.x);\n"
   "	float3 myCurvePoint2 = curveAtPoint(thePosition.x + 1);\n"
   "	\n"
   "	float3 myCurveDirection = normalize(myCurvePoint2 - myCurvePoint1);\n"
   "	float3 myAxis1 = normalize(cross(myCurveDirection, float3(0,0,1)));\n"
   "	float3 myAxis2 = normalize(cross(myCurveDirection, myAxis1));\n"
   "	\n"
   "	float3 myPoint = (sin(thePosition.z) * myAxis1 + cos(thePosition.z) * myAxis2) * radius * thePosition.y;\n"
   "	\n"
   "	return myCurvePoint1 + myPoint;\n"
   "}\n"
   "void main(\n"
   "	in float4 iPosition : TEXCOORD0,\n"
   "	in float4 iInfo : TEXCOORD1,\n"
   "	in float4 iVelocity : TEXCOORD2,\n"
   "	out float4 oPosition : COLOR0,\n"
   "	out float4 oInfo : COLOR1 ,\n"
   "	out float4 oVelocity : COLOR2 \n"
   "){\n"
   "	oPosition.xyz = curvePos(iPosition.xyz);\n"
   "	oPosition.w = iPosition.w;\n"
   "	oInfo = iInfo;\n"
   "	oVelocity = iVelocity;\n"
   "}\n"
   ;
