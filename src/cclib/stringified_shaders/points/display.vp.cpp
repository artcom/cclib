/* Generated file, do not edit! */

#include "display.vp.h"

char const* const display_vp = 
   "uniform float4x4 modelViewProjection : state.matrix.mvp;\n"
   "uniform float4x4 modelView : state.matrix.modelview[0];\n"
   "uniform float minPointSize;\n"
   "uniform float maxPointSize;\n"
   "uniform float pointSize;\n"
   "uniform float tanHalfFov;\n"
   "void main (\n"
   "	in float4 iPosition : POSITION,\n"
   "	in float2 iTexCoord : TEXCOORD0,\n"
   "	in float4 iColor : COLOR0,\n"
   "	out float4 oPosition : POSITION,\n"
   "	out float2 oTexCoord : TEXCOORD0,\n"
   "	out float oPointSize : PSIZ,\n"
   "	out float4 oColor : COLOR0\n"
   "){\n"
   "	oPosition = mul(modelViewProjection,iPosition);\n"
   "	oTexCoord = iTexCoord;\n"
   "	\n"
   "	float4 posViewSpace = mul(modelView, iPosition);\n"
   "	//oPointSize = clamp(pointSize * tanHalfFov / -oPosition.z, minPointSize, maxPointSize);\n"
   "	// Compute point size.\n"
   "	\n"
   "	const float fieldOfView = radians(60.0);\n"
   "	float myPointSize = 60 * tan(fieldOfView / 2) / -posViewSpace.z;\n"
   "	\n"
   "	//float myPointSize = tanHalfFov / -posViewSpace.z * pointSize;\n"
   "	if (myPointSize > maxPointSize)\n"
   "	{\n"
   "		myPointSize = maxPointSize;\n"
   "	}\n"
   "	else if (myPointSize < minPointSize)\n"
   "	{\n"
   "		myPointSize = minPointSize;\n"
   "	}\n"
   "	// Do fake antialiasing if point size is below 1.	\n"
   "	/*o.Color = color;\n"
   "	o.PointSize = pointSize;\n"
   "	if (pointSize < 1)\n"
   "	{\n"
   "		o.Color = color * pointSize; /// BUG: Squared!\n"
   "		o.PointSize = 1;\n"
   "	}*/\n"
   "	oColor = min(iColor * (myPointSize * 3.0), iColor);\n"
   "	//oColor = iColor;\n"
   "	//oPointSize = max(myPointSize, 1);\n"
   "	oPointSize = myPointSize;\n"
   "}\n"
   "	           \n"
   ;
