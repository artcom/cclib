/* Generated file, do not edit! */

#include "springs.fp.h"

char const* const springs_fp = 
   "uniform float appWidth;\n"
   "uniform samplerRECT forceIDs;\n"
   "uniform samplerRECT particleIDs;\n"
   "uniform samplerRECT springDataTexture;\n"
   "uniform samplerRECT positionTexture;\n"
   "uniform samplerRECT velocityTexture;\n"
   "uniform float 		deltaTime;\n"
   "uniform float		make2D = 1;\n"
   "void main (\n"
   "	in  float2 texIDs : WPOS,\n"
   "	out float3 forceA : COLOR0,\n"
   "	out float3 forceB : COLOR1\n"
   "){\n"
   "	/** \n"
   "	 * Stores the spring values\n"
   "	 * x = restLength\n"
   "	 * y = springConstant\n"
   "	 * z = damping\n"
   "	 **/\n"
   "	float3 springData = texRECT(springDataTexture, texIDs);\n"
   "	float4 ids = texRECT(particleIDs, texIDs);\n"
   "	\n"
   "	float3 positionA = texRECT (positionTexture, ids.xy);\n"
   "	float3 positionB = texRECT (positionTexture, ids.zw);\n"
   "	\n"
   "	float3 velocityA = texRECT (velocityTexture, ids.xy);\n"
   "	float3 velocityB = texRECT (velocityTexture, ids.zw);\n"
   "	\n"
   "	float3 a2b = positionA - positionB;\n"
   "	float a2bDistance = length(a2b);\n"
   "	if (a2bDistance == 0) {\n"
   "		a2b = float3(0,0,0);\n"
   "	} else {\n"
   "		a2b /= a2bDistance;\n"
   "	}\n"
   "	// spring force is proportional to how much it stretched\n"
   "	float springForce = -(a2bDistance - springData.x) * springData.y;\n"
   "	// want velocity along line b/w a & b, damping force is proportional to this\n"
   "	float3 Va2b = velocityA - velocityB;\n"
   "	float dampingForce = -springData.z * dot(a2b, Va2b);\n"
   "	// forceB is same as forceA in opposite direction\n"
   "	float r = springForce + dampingForce;\n"
   "	a2b *= r;\n"
   "	forceA = a2b;\n"
   "	forceB = -a2b;\n"
   "}\n"
   "	           \n"
   ;
